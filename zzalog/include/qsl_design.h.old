#ifndef __QSL_DESIGN__
#define __QSL_DESIGN__

#include "qsl_form.h"
#include "qsl_display.h"

#include <vector>

#include <FL/Fl_Window.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Hold_Browser.H>
#include <FL/Fl_Light_Button.H>
#include <FL/Fl_Group.H>


	// This class allows the user to customise the way the QSL card is printed.
	class qsl_design : public Fl_Window
	{

	public:

		qsl_design(int X, int Y, int W, int H, const char* callsign);
		~qsl_design();

	protected:
		// Load values from settings_
		void load_values();
		// Used to create the form
		void create_form(int X, int Y);
		// Used to write settings back
		void save_values();
		// Load data
		void load_data(string filename);
		// Save data
		void save_data(string filename);
		// Add data item
		void add_item(qsl_display::item_def* item);
		// Delete data item
		void delete_item(int number);
		// Create item groups
		void draw_items();
		// Resize the group after adding or deleting an item
		void resize();


		// Callbacks
		// Dimension radio 
		static void cb_radio_dim(Fl_Widget* w, void* v);
		// OK button
		static void cb_bn_ok(Fl_Widget* w, void* v);
		// Cancel button
		static void cb_bn_can(Fl_Widget* w, void* v);
		// Design edited
		static void cb_design(Fl_Widget* w, void* v);
		// Item field name
		static void cb_ch_field(Fl_Widget* w, void* v);
		// Style edited
		static void cb_bn_style(Fl_Widget* w, void* v);
		// label position: 0 = above, 1 = left
		static void cb_bn_align(Fl_Widget* w, void* v);
		// Draw box around field
		static void cb_bn_box(Fl_Widget* w, void* v);

		// Number of rows in print
		int num_rows_;
		// Number of columns to print
		int num_cols_;
		// dimension usnits
		qsl_form::dim_unit unit_;
		// Label width
		double width_;
		// Label height
		double height_;
		// Column width
		double col_width_;
		// Row height
		double row_height_;
		// First column position
		double col_left_;
		// First row position
		double row_top_;
		// Number of QSOs per card
		int number_qsos_;
		// Callsign to read parameters
		string callsign_;
		// The card design
		vector<qsl_display::item_def*> card_data_;
		// String filename
		string filename_;

		//Widgets to reference
		Fl_Group* grp_sizes_;
		Fl_Group* grp_actions_;
		// Contains the item editing buttons
		Fl_Group* grp_items_;
		// Card display
		qsl_display* display_;

		

	};

#endif


